<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<qualifiedTypeNameHistroy>
    <fullyQualifiedTypeName name="org.springframework.security.web.AuthenticationEntryPoint"/>
    <fullyQualifiedTypeName name="jakarta.servlet.http.HttpServletResponse"/>
    <fullyQualifiedTypeName name="java.util.function.Function"/>
    <fullyQualifiedTypeName name="java.util.Map"/>
    <fullyQualifiedTypeName name="java.util.Date"/>
    <fullyQualifiedTypeName name="org.springframework.web.filter.OncePerRequestFilter"/>
    <fullyQualifiedTypeName name="org.hibernate.annotations.Comment"/>
    <fullyQualifiedTypeName name="java.lang.IllegalArgumentException"/>
    <fullyQualifiedTypeName name="java.nio.charset.MalformedInputException"/>
    <fullyQualifiedTypeName name="io.jsonwebtoken.MalformedJwtException"/>
    <fullyQualifiedTypeName name="org.springframework.security.core.userdetails.UserDetails"/>
    <fullyQualifiedTypeName name="org.springframework.security.core.context.SecurityContextHolder"/>
    <fullyQualifiedTypeName name="org.springframework.security.web.authentication.WebAuthenticationDetailsSource"/>
    <fullyQualifiedTypeName name="com.blog.security.JwtAuthenticationEntryPoint"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RestController"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RequestMapping"/>
    <fullyQualifiedTypeName name="com.blog.security.JwtAuthResponse"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.PostMapping"/>
    <fullyQualifiedTypeName name="com.blog.payloads.JwtAuthRequest"/>
    <fullyQualifiedTypeName name="org.springframework.security.core.userdetails.UserDetailsService"/>
    <fullyQualifiedTypeName name="org.springframework.security.authentication.AuthenticationManager"/>
    <fullyQualifiedTypeName name="org.springframework.security.authentication.UsernamePasswordAuthenticationToken"/>
    <fullyQualifiedTypeName name="org.springframework.security.authentication.DisabledException"/>
    <fullyQualifiedTypeName name="com.blog.payloads.JwtAuthResponse"/>
    <fullyQualifiedTypeName name="org.aspectj.weaver.NewConstructorTypeMunger"/>
    <fullyQualifiedTypeName name="org.springframework.http.ResponseEntity"/>
    <fullyQualifiedTypeName name="org.springframework.http.HttpStatus"/>
    <fullyQualifiedTypeName name="io.jsonwebtoken.ExpiredJwtException"/>
    <fullyQualifiedTypeName name="org.springframework.util.AntPathMatcher"/>
    <fullyQualifiedTypeName name="lombok.Value"/>
    <fullyQualifiedTypeName name="org.springframework.beans.factory.annotation.Value"/>
    <fullyQualifiedTypeName name="org.springframework.context.annotation.Configuration"/>
    <fullyQualifiedTypeName name="java.lang.RuntimeException"/>
    <fullyQualifiedTypeName name="org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter"/>
    <fullyQualifiedTypeName name="org.springframework.security.config.http.SessionCreationPolicy"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RequestBody"/>
    <fullyQualifiedTypeName name="lombok.Getter"/>
    <fullyQualifiedTypeName name="lombok.Setter"/>
    <fullyQualifiedTypeName name="lombok.NoArgsConstructor"/>
    <fullyQualifiedTypeName name="com.blog.security.CustomUserDetailService"/>
    <fullyQualifiedTypeName name="javax.persistence.Entity"/>
    <fullyQualifiedTypeName name="javax.persistence.Table"/>
    <fullyQualifiedTypeName name="javax.persistence.CascadeType"/>
    <fullyQualifiedTypeName name="javax.persistence.Id"/>
    <fullyQualifiedTypeName name="javax.validation.constraints.Email"/>
    <fullyQualifiedTypeName name="javax.validation.constraints.NotEmpty"/>
    <fullyQualifiedTypeName name="com.blog.security.JwtAuthenticationFilter"/>
    <fullyQualifiedTypeName name="com.blog.security.AuthenticationFilter"/>
    <fullyQualifiedTypeName name="org.springframework.beans.factory.annotation.Autowired"/>
    <fullyQualifiedTypeName name="com.blog.entities.Role"/>
    <fullyQualifiedTypeName name="com.blog.exceptions.ResourceNotFoundException"/>
    <fullyQualifiedTypeName name="com.blog.exceptions.EmailNotFoundException"/>
    <fullyQualifiedTypeName name="com.blog.entities.User"/>
    <fullyQualifiedTypeName name="com.blog.security.JwtTokenHelper"/>
    <fullyQualifiedTypeName name="org.springframework.security.crypto.password.PasswordEncoder"/>
    <fullyQualifiedTypeName name="org.springframework.boot.CommandLineRunner"/>
    <fullyQualifiedTypeName name="org.springframework.security.config.annotation.method.configuration.EnableGlobalMethodSecurity"/>
    <fullyQualifiedTypeName name="org.springframework.security.access.prepost.PreAuthorize"/>
    <fullyQualifiedTypeName name="org.apache.logging.log4j.Logger"/>
    <fullyQualifiedTypeName name="org.slf4j.LoggerFactory"/>
</qualifiedTypeNameHistroy>
